// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Full Version"

// DATE "05/18/2018 12:09:45"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module four_bit_lfsr (
	clk,
	reset,
	enable,
	random_number);
input 	clk;
input 	reset;
input 	enable;
output 	[3:0] random_number;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \enable~input_o ;
wire \random_number[0]~output_o ;
wire \random_number[1]~output_o ;
wire \random_number[2]~output_o ;
wire \random_number[3]~output_o ;
wire \clk~input_o ;
wire \reset~input_o ;
wire \v_random_number~0_combout ;
wire \v_random_number~1_combout ;
wire \v_random_number~2_combout ;
wire \v_random_number~3_combout ;
wire [3:0] v_random_number;


cycloneiii_io_obuf \random_number[0]~output (
	.i(v_random_number[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\random_number[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \random_number[0]~output .bus_hold = "false";
defparam \random_number[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \random_number[1]~output (
	.i(v_random_number[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\random_number[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \random_number[1]~output .bus_hold = "false";
defparam \random_number[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \random_number[2]~output (
	.i(v_random_number[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\random_number[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \random_number[2]~output .bus_hold = "false";
defparam \random_number[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_obuf \random_number[3]~output (
	.i(v_random_number[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\random_number[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \random_number[3]~output .bus_hold = "false";
defparam \random_number[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiii_lcell_comb \v_random_number~0 (
// Equation(s):
// \v_random_number~0_combout  = (v_random_number[1]) # (\reset~input_o )

	.dataa(v_random_number[1]),
	.datab(\reset~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\v_random_number~0_combout ),
	.cout());
// synopsys translate_off
defparam \v_random_number~0 .lut_mask = 16'hEEEE;
defparam \v_random_number~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \v_random_number[0] (
	.clk(\clk~input_o ),
	.d(\v_random_number~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(v_random_number[0]),
	.prn(vcc));
// synopsys translate_off
defparam \v_random_number[0] .is_wysiwyg = "true";
defparam \v_random_number[0] .power_up = "low";
// synopsys translate_on

cycloneiii_lcell_comb \v_random_number~1 (
// Equation(s):
// \v_random_number~1_combout  = (v_random_number[2] & !\reset~input_o )

	.dataa(v_random_number[2]),
	.datab(gnd),
	.datac(gnd),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\v_random_number~1_combout ),
	.cout());
// synopsys translate_off
defparam \v_random_number~1 .lut_mask = 16'h00AA;
defparam \v_random_number~1 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \v_random_number[1] (
	.clk(\clk~input_o ),
	.d(\v_random_number~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(v_random_number[1]),
	.prn(vcc));
// synopsys translate_off
defparam \v_random_number[1] .is_wysiwyg = "true";
defparam \v_random_number[1] .power_up = "low";
// synopsys translate_on

cycloneiii_lcell_comb \v_random_number~2 (
// Equation(s):
// \v_random_number~2_combout  = (v_random_number[3] & !\reset~input_o )

	.dataa(v_random_number[3]),
	.datab(gnd),
	.datac(gnd),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\v_random_number~2_combout ),
	.cout());
// synopsys translate_off
defparam \v_random_number~2 .lut_mask = 16'h00AA;
defparam \v_random_number~2 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \v_random_number[2] (
	.clk(\clk~input_o ),
	.d(\v_random_number~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(v_random_number[2]),
	.prn(vcc));
// synopsys translate_off
defparam \v_random_number[2] .is_wysiwyg = "true";
defparam \v_random_number[2] .power_up = "low";
// synopsys translate_on

cycloneiii_lcell_comb \v_random_number~3 (
// Equation(s):
// \v_random_number~3_combout  = (!\reset~input_o  & (v_random_number[0] $ (v_random_number[2])))

	.dataa(gnd),
	.datab(v_random_number[0]),
	.datac(v_random_number[2]),
	.datad(\reset~input_o ),
	.cin(gnd),
	.combout(\v_random_number~3_combout ),
	.cout());
// synopsys translate_off
defparam \v_random_number~3 .lut_mask = 16'h003C;
defparam \v_random_number~3 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \v_random_number[3] (
	.clk(\clk~input_o ),
	.d(\v_random_number~3_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(v_random_number[3]),
	.prn(vcc));
// synopsys translate_off
defparam \v_random_number[3] .is_wysiwyg = "true";
defparam \v_random_number[3] .power_up = "low";
// synopsys translate_on

cycloneiii_io_ibuf \enable~input (
	.i(enable),
	.ibar(gnd),
	.o(\enable~input_o ));
// synopsys translate_off
defparam \enable~input .bus_hold = "false";
defparam \enable~input .simulate_z_as = "z";
// synopsys translate_on

assign random_number[0] = \random_number[0]~output_o ;

assign random_number[1] = \random_number[1]~output_o ;

assign random_number[2] = \random_number[2]~output_o ;

assign random_number[3] = \random_number[3]~output_o ;

endmodule
